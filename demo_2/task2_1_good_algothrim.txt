#!/usr/bin/env bash

# create switch
depth=$1		#take user input for depth 
fanout=$2		#take user input for fanout 
mod=0			# used to great distinctions between bidges


# creates the host
function create_ns() {
echo "Creating the namespace $1"
ip netns add $1
}

# creates the switch
function create_ovs_bridge() {
echo "Creating the OVS bridge $1"
ovs-vsctl set bridge $1 protocol=OpenFlow13
ovs-vsctl add-br $1

}

# attach host to switch
function attach_ns_to_ovs() {
echo "Attaching the namespace $1 to the OVS $2"
ip link add $3 type veth peer name $4
ip link set $3 netns $1
ovs-vsctl add-port $2 $4 -- set Interface $4 ofport_request=$5
ip netns exec $1 ip addr add $6/24 dev $3
ip netns exec $1 ip link set dev $3 up
ip link set $4 up
}

# attach switch to switch
function attach_ovs_to_ovs() {
echo "Attaching the OVS $1 to the OVS $2"
ip link add name $3 type veth peer name $4
ip link set $3 up
ip link set $4 up
ovs-vsctl add-port $1 $3 -- set Interface $3 ofport_request=$5
ovs-vsctl add-port $2 $4 -- set Interface $4 ofport_request=$5
}

# attach switch to remote controller
function attach_ovs_to_sdn() {
echo "Attaching the OVS bridge to the ONOS controller"
ovs-vsctl set-controller $1 tcp:127.0.0.1:6653
}



for ((i=0; i<= depth; i++))
do	

  bin=1 #brigde index
  host=1 # used  to keep track of the hosts # create first bridge as first branch which other branches connect
  for ((j=1; j<=$(($2**$i)); j++))
  do
	if(($i == depth)) # proceed into the statement only if i is equal to the depth, intended to create host to 
					#respective bridge
	then
	    # p=$(($h+1)) 
	    # b=$(($i - 1)) # intented to make connection to pervious brigde in the next two lines
	    create_ns h-$host # create hosts as and when needed further down the line
	    attach_ns_to_ovs h-$host br-$(($i - 1)).$bin veth-br-$host veth-br-ovs$host-$(($h + 1))  2 10.0.0.$host
	    host=$(($host+1))
	else #if i is not equal to the depth, means create more brigdes and 
	    create_ovs_bridge br-$i.$j 
	    attach_ovs_to_ovs br-$(($i - 1)).$bin br-$i.$j br-ovs$mod br-ovs$mod-$(($mod + 1)) 1
	    attach_ovs_to_sdn br-$i.$j
	    mod=$(($mod+1))
	fi
	if(($j % $2==0))
	then
	    bin=$(($bin + 1))
	fi
   done
done


# Ping hosts
hin=$(($1**$2))
for ((i=1, j=$(($hin - 1)); i<$hin; i++, j--))
do
    ip netns exec h-$i ping -c 1 10.0.0.$j
done

